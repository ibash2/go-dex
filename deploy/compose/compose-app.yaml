volumes:
  db-data:

services:
  app-api:
    build:
      context: ../../
      dockerfile: ./deploy/compose/bot-api/Dockerfile
    container_name: app-api
    ports:
      - 8000:${APP_HTTP_PORT}
    environment:
      - APP_HTTP_PORT=${APP_HTTP_PORT}
      - HTTP_RPC=${HTTP_RPC}
      - MQ_HOST=${MQ_HOST}
      - MQ_PORT=${MQ_PORT}
      - DATABASE_URL=${DATABASE_URL:-postgresql+asyncpg://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@${POSTGRES_HOST:-app-db-host}:${POSTGRES_PORT:-5432}/${POSTGRES_DB:-postgres}}



  app-db:
    image: postgres:14.5-alpine
    container_name: app-db
    env_file: "../../.env"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - 5431:5432


  geth:
    image: ethereum/client-go:latest
    ports:
      - "8547:8547"
      - "8546:8546"
    # volumes:
    #   - ./dex/data:/data/geth
    command: >
      --http
      --http.addr 0.0.0.0
      --http.port 8547
      --http.api eth,net,web3,personal,miner
      --http.corsdomain "*"
      --ws
      --ws.addr 0.0.0.0
      --ws.port 8546
      --ws.api eth,net,web3,personal,miner
      --verbosity 3
      --datadir /data/geth
      --networkid 1337
      --dev